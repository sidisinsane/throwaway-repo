---
// astro
import { getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";

// utils
import { i18nFormatDate, removeUrlProtocol } from "../lib/utils/index.ts";

// components
import Debug from "./Debug.astro";

// env
const SITE_AUTHOR = import.meta.env.SITE_AUTHOR || "sidisinsane";

// astro props
interface Props {
  collection: CollectionEntry<"snippets"> | CollectionEntry<"udhr">;
}
const { collection } = Astro.props;

// do stuff
type AuthorType = {
  slug: string;
  collection: "authors";
};
const author: AuthorType = collection.data.author || {
  slug: SITE_AUTHOR,
  collection: "authors",
};

let bylinePrefix = "Added ";
if (collection.collection !== "udhr") {
  bylinePrefix = author.slug == SITE_AUTHOR ? "By " : "Inspired by ";
}

let basedOnUrl = "";
if (collection.collection == "snippets" && collection.data.isBasedOnUrl) {
  basedOnUrl = collection.data.isBasedOnUrl;
}
if (collection.collection == "udhr" && collection.data.url) {
  basedOnUrl = collection.data.url;
}

const collectionAuthor = (await getEntry(author)) as CollectionEntry<"authors">;
---

<div class:list={["byline", "collection-navigation__byline"]}>
  {bylinePrefix}{" "}

  {
    collection.collection !== "udhr" && (
      <>
        <a
          class="byline__link"
          href={`/${collectionAuthor.collection}/${collectionAuthor.slug}/`}
          title=""
        >
          {collectionAuthor.data.name || `@${collectionAuthor.data.alias}`}
        </a>
        {". "}
      </>
    )
  }

  {
    collection.data.pubDate && (
      <time datetime={collection.data.pubDate}>
        {i18nFormatDate({ dateString: collection.data.pubDate })}
      </time>
    )
  }

  {
    basedOnUrl && (
      <>
        {". "}
        <a
          class="byline__link"
          href={basedOnUrl}
          title=""
          target="_blank"
          rel="noopener"
        >
          {removeUrlProtocol(basedOnUrl).toLowerCase()}
        </a>
      </>
    )
  }
</div>

<Debug item={collection} />

<style>
  .byline {
    font-size: 0.75rem;
  }

  .byline__link {
    text-decoration: none;
    transition: color 0.2s var(--ease-1);
  }

  .byline__link:hover {
    color: var(--fg-emphasized);
  }
</style>
