---
// astro
import { getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";
// components
import AuthorSocialBar from "./AuthorSocialBar.astro";
import Debug from "./Debug.astro";

// env
type AuthorType = {
  slug: string;
  collection: "authors";
};
const SITE_AUTHOR = import.meta.env.SITE_AUTHOR || "sidisinsane";
const DEFAULT_AUTHOR: AuthorType = {
  slug: SITE_AUTHOR,
  collection: "authors",
};

// astro props
interface Props {
  author?: AuthorType;
}
const { author = DEFAULT_AUTHOR } = Astro.props;

// do stuff
const collectionAuthor = (await getEntry(
  "authors",
  author.slug as string,
)) as CollectionEntry<"authors">;
const authorHref = `/${collectionAuthor?.collection}/${collectionAuthor?.slug}`;
const authorName = (collectionAuthor?.data?.name ||
  collectionAuthor?.data?.alias) as string;
---

<div class="author-bar">
  <h2 class="author-bar__author">
    <a class="author-bar__link" href={authorHref} title="">{authorName}</a>
  </h2>
  <div class="author-bar__social">
    <AuthorSocialBar author={author} />
  </div>
</div>

<Debug item={collectionAuthor} />
{
  author?.slug && (
    <>
      <Debug item={author.slug} />
      <Debug item={typeof author.slug} />
    </>
  )
}
{collectionAuthor?.collection && <Debug item={collectionAuthor.collection} />}

<style>
  .author-bar {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    column-gap: calc(var(--gap) / 4);
    row-gap: calc(var(--gap) / 4);
  }

  .author-bar__author {
    flex: 3;
    font-size: 1.3333rem;
    display: flex;
    align-items: center;
    column-gap: calc(var(--gap) / 4);
  }

  .author-bar__social {
    display: grid;
    align-items: center;
  }

  .author-bar__link {
    text-decoration: none;
    transition: color 0.2s var(--ease-1);
  }

  .author-bar__link:hover {
    color: var(--fg-emphasized);
  }
</style>
