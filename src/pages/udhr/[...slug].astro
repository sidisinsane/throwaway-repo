---
// astro
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
// utils
import type { CollectionPaginationProps } from "../../lib/utils/index.ts";

// components
import Header from "../../components/Header.astro";
import Debug from "../../components/Debug.astro";

// layout
import Layout from "../../layouts/BaseLayout.astro";

// astro props
interface Props extends CollectionPaginationProps {
  entry: CollectionEntry<"udhr">;
}

export async function getStaticPaths() {
  const collectionUdhr = (await getCollection("udhr", ({ data }) => {
    return data.isDraft !== true;
  })) as CollectionEntry<"udhr">[];

  collectionUdhr.sort((a, b) => {
    if (a.slug < b.slug) {
      return -1;
    }

    if (a.slug > b.slug) {
      return 1;
    }

    return 0;
  });

  return collectionUdhr.map((entry, index) => ({
    params: { slug: entry.slug },
    props: {
      index: index,
      entry: entry,
      total: collectionUdhr.length,
      prev: index - 1 >= 0 ? collectionUdhr[index - 1] : null,
      next:
        index + 1 <= collectionUdhr.length ? collectionUdhr[index + 1] : null,
    },
  }));
}

const { entry } = Astro.props;

// do stuff
const { Content } = await entry.render();

const layoutProps = {
  locale: entry.data?.locale as keyof typeof Intl.Locale,
  title: entry.data.title,
  description: entry.data?.description,
};
---

<Layout {...layoutProps}>
  <Header
    slot="header"
    title={layoutProps.title}
    description={layoutProps.description}
  />

  <Content />

  <Debug item={entry.data} debug={false} />
</Layout>
